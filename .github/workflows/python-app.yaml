name: Fetch News API

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: news_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: news_db
      NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Debug env
      run: |
        echo "NEWS_API_KEY is set? ${NEWS_API_KEY:+yes}"

    - name: Lint with flake8
      run: |
        echo "Running flake8..."
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Check code formatting with black
      run: |
        echo "Checking formatting with black..."
        black --check .

    - name: Wait for MySQL to be ready
      run: |
        sleep 15

    - name: Initialize DB Schema
      run: |
        python -c "
        import mysql.connector, os
        conn = mysql.connector.connect(
            host=os.getenv('DB_HOST'),
            user=os.getenv('DB_USER'),
            password=os.getenv('DB_PASSWORD'),
            database=os.getenv('DB_NAME')
        )
        cursor = conn.cursor()
        cursor.execute('''
        CREATE TABLE IF NOT EXISTS articles (
            id INT AUTO_INCREMENT PRIMARY KEY,
            title TEXT,
            description TEXT,
            url TEXT,
            published_at DATETIME
        )
        ''')
        conn.commit()
        conn.close()
        "

    - name: Run tests
      run: pytest

    - name: Deploy to GithubPages
      uses: Jameslves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: build
